What happens when you initialize a repository? Why do you need to do it?

Initializing a repository essentially creates a container for storing the files. This allows you to combine just the files you want to be saved simultaneously.



How is the staging area different from the working directory and the repository?
What value do you think it offers?



The staging area is where files from the working directory are pulled to and combined before being committed to the repository.  This allows for more flexibility and customization of commits.

How can you use the staging area to make sure you have one commit per logical
change?


The staging area can be used to customize which files will be included in a commit. If there is more than one logical change in different files this can be done in multiple commits by grouping the files appropriately in the staging area.


What are some situations when branches would be helpful in keeping your history
organized? How would branches help?


Branches are helpful when trying out different versions of something. The master branch can remain the original working page and other branches can be created to create alternate versions of the same site, such as when creating a version in a different language.


How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?


What are the pros and cons of Git’s automatic merging vs. always doing merges
manually?
